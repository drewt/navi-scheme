SHELL = /bin/sh

prefix      = @prefix@
exec_prefix = @exec_prefix@
datarootdir = @datarootdir@
bindir      = @bindir@
datadir     = @datadir@
mandir      = @mandir@
man1dir     = $(mandir)/man1

_ver0   = $(shell git rev-parse --verify --short HEAD 2>/dev/null)-git
_ver1   = @PACKAGE_VERSION@
VERSION = $(or $(_ver0),$(_ver1))

CC        = @CC@
CFLAGS    = @CFLAGS@
DEFS      = -D NAVI_COMPILE -D NAVI_VERSION="\"$(VERSION)\"" \
	    -D _POSIX_C_SOURCE=199309L -D DATADIR="\"@datadir@\""
ALLCFLAGS = $(CFLAGS) $(DEFS) -include assert.h -include ./config.h \
	    -include ./compiler.h -include ./internal.h
AR        = ar
ARFLAGS   = rcs
LD        = $(CC)
LDFLAGS   = @ICU_LIBS@

INSTALL         = @INSTALL@
INSTALL_DATA    = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
MKDIR_P         = @MKDIR_P@

distname  = @PACKAGE_TARNAME@-$(VERSION)
distfiles = $(shell git ls-tree -r master --name-only)

libobjects  = arithmetic.o bytevector.o char.o control_features.o display.o \
	      environment.o eval.o extern.o heap.o list.o port.o read.o \
	      string.o system.o vector.o
testobjects = tests/arithmetic.o tests/bytevector.o tests/char.o \
	      tests/lambda.o tests/list.o tests/main.o
objects     = $(libobjects) $(testobjects) navii.o
binary      = navii
static_lib  = libnavi.a
clean       = $(objects) $(binary) $(static_lib)
distclean   = config.h config.log config.status makefile $(distname).tar.gz

all: $(binary)

include rules.mk

$(static_lib): $(libobjects)
	$(call cmd,ar)

$(binary): navii.o $(static_lib)
	$(call cmd,ld)

check: $(testobjects) $(static_lib)
	$(call cmd,ld,-lcheck)
	@./check

Makefile: Makefile.in config.h.in
	./config.status

$(distname).tar.gz: $(distfiles)
	$(call cmd,tar,$(distname))

dist: $(distname).tar.gz

installdirs:
	$(call cmd,mkdir_p,$(DESTDIR)$(datadir)/navi/scheme)
	$(call cmd,mkdir_p,$(DESTDIR)$(man1dir))
	$(call cmd,mkdir_p,$(DESTDIR)$(bindir))

install: installdirs all
	$(call cmd,install_data,scheme/base.scm \
				$(DESTDIR)$(datadir)/navi/scheme)
	$(call cmd,install_data,scheme/case-lambda.scm \
				$(DESTDIR)$(datadir)/navi/scheme)
	$(call cmd,install_data,scheme/char.scm \
				$(DESTDIR)$(datadir)/navi/scheme)
	$(call cmd,install_data,scheme/lazy.scm \
				$(DESTDIR)$(datadir)/navi/scheme)
	$(call cmd,install_data,scheme/process-context.scm \
				$(DESTDIR)$(datadir)/navi/scheme)
	$(call cmd,install_data,scheme/read.scm \
				$(DESTDIR)$(datadir)/navi/scheme)
	$(call cmd,install_data,scheme/time.scm \
				$(DESTDIR)$(datadir)/navi/scheme)
	$(call cmd,install_data,scheme/write.scm \
				$(DESTDIR)$(datadir)/navi/scheme)
	$(call cmd,install_data,doc/navii.1 $(DESTDIR)$(man1dir))
	$(call cmd,install_program,$(binary) $(DESTDIR)$(bindir))

uninstall:
	rm -f $(DESTDIR)$(datadir)/navi/scheme/base.scm
	rm -f $(DESTDIR)$(datadir)/navi/scheme/case-lambda.scm
	rm -f $(DESTDIR)$(datadir)/navi/scheme/char.scm
	rm -f $(DESTDIR)$(datadir)/navi/scheme/lazy.scm
	rm -f $(DESTDIR)$(datadir)/navi/scheme/process-context.scm
	rm -f $(DESTDIR)$(datadir)/navi/scheme/read.scm
	rm -f $(DESTDIR)$(datadir)/navi/scheme/time.scm
	rm -f $(DESTDIR)$(datadir)/navi/scheme/write.scm
	rmdir $(DESTDIR)$(datadir)/navi/scheme
	rmdir $(DESTDIR)$(datadir)/navi
	rm -f $(DESTDIR)$(bindir)/$(binary)
